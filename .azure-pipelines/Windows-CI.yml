trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
    #  py38:
    #    python.version: '3.8'
    #    onnx_ml: 0
    #  py38_onnx_ml:
    #    python.version: '3.8'
    #    onnx_ml: 1
    #  py37:
    #    python.version: '3.7'
    #    onnx_ml: 0
    #  py37_onnx_ml:
    #    python.version: '3.7'
    #    onnx_ml: 1
      py36:
        python.version: '3.6'
        onnx_ml: 0
      py36_onnx_ml:
        python.version: '3.6'
        onnx_ml: 1
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --name py$(python.version) -c conda-forge python=$(python.version) numpy libprotobuf=3.11.3 protobuf=3.11.3
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip
      python -m pip install --quiet pytest nbval numpy

      git submodule update --init --recursive
      set ONNX_BUILD_TESTS=1
      set ONNX_ML=$(onnx_ml)
      set USE_MSVC_STATIC_RUNTIME=0
      set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=ON -DProtobuf_USE_STATIC_LIBS=OFF -DONNX_USE_LITE_PROTO=ON
      python setup.py --quiet install
      @echo "Successfully built ONNX"

      # onnx c++ API tests
      @echo "Starting onnx_gtests run"
      .setuptools-cmake-build\Release\onnx_gtests.exe
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "onnx_gtests failed"
        EXIT 1
      )

      @echo "Starting onnxifi_test_driver_gtests run"
      .setuptools-cmake-build\Release\onnxifi_test_driver_gtests.exe onnx\backend\test\data\node
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "onnxifi_test_driver_gtests failed"
        EXIT 1
      )

      # onnx python api tests
      pytest
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "pytest failed"
        EXIT 0
      )

      # check auto-gen files up-to-date
      python onnx/defs/gen_doc.py
      python onnx/gen_proto.py -l
      python onnx/gen_proto.py -l --ml
      python onnx/backend/test/stat_coverage.py
      backend-test-tools generate-data
      git status
      git diff --exit-code

      rm -rf .setuptools-cmake-build
      pip install --quiet -e .[mypy]
      python setup.py typecheck
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "typecheck failed"
        EXIT 1
      )
    displayName: Install and test ONNX
