trigger:
- master

jobs:
- job: 'Test'
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      py27:
        python.version: '2.7'
        onnx_ml: 0
      py36:
        python.version: '3.6'
        onnx_ml: 0
      py36-onnx-ml:
        python.version: '3.6'
        onnx_ml: 1
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      sudo apt-get install -qq -o=Dpkg::Use-Pty=0 -y --no-install-recommends dos2unix
      git submodule update --init --recursive
      python -m pip install --upgrade setuptools
      python -m pip install numpy
      conda install -y -c conda-forge pybind11 protobuf
      brew update
      brew install protobuf
      export ONNX_BUILD_TESTS=1
      export DEBUG=${onnx_debug}
      export ONNX_ML=${onnx_ml}
      set CMAKE_ARGS="-DONNX_USE_LITE_PROTO=ON -DONNXIFI_DUMMY_BACKEND=ON"
      export ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI
      python setup.py --quiet install

    displayName: 'Install dependencies and ONNX'

  - script: |      
      @echo ON
      # lint python code
      pip install --quiet flake8
      flake8
      if [ $? -ne 0 ]; then
        echo "flake8 returned failures"
        exit 1
      fi

      # check line endings to be UNIX
      find . -type f -regextype posix-extended -regex '.*\.(py|cpp|md|h|cc|proto|proto3|in)' | xargs dos2unix --quiet
      git status
      git diff --exit-code
      
      # check auto-gen files up-to-date
      python onnx/defs/gen_doc.py
      python onnx/gen_proto.py -l
      python onnx/gen_proto.py -l --ml
      python onnx/backend/test/stat_coverage.py
      backend-test-tools generate-data
      git status
      git diff --exit-code

      # Do not hardcode onnx's namespace in the c++ source code, so that
      # other libraries who statically link with onnx can hide onnx symbols
      # in a private namespace.
      ! grep -R --include='*.cc' --include='*.h' 'namespace onnx' .
      ! grep -R --include='*.cc' --include='*.h' 'onnx::' .

      # onnx python api tests
      pip install --quiet pytest nbval
      pytest
      if [ $? -ne 0 ]; then
        echo "pytest failed"
        exit 1
      fi

      # onnx c++ API tests
      export LD_LIBRARY_PATH="./.setuptools-cmake-build/:$LD_LIBRARY_PATH"
      ./.setuptools-cmake-build/onnx_gtests
      if [ $? -ne 0 ]; then
        echo "onnx_gtests failed"
        exit 1
      fi

      ./.setuptools-cmake-build/onnxifi_test_driver_gtests onnx/backend/test/data/node
      if [ $? -ne 0 ]; then
        echo "onnxifi_test_driver_gtests failed"
        exit 1
      fi

      # Mypy only works with Python 3
      if [ "$(python.version)" != "2.7" ]; then
        # Mypy only works with our generated _pb.py files when we install in develop mode, so let's do that
        pip uninstall -y onnx
        ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI pip install --no-use-pep517 -e .[mypy]
        python setup.py --quiet typecheck
        pip uninstall -y onnx
        rm -rf .setuptools-cmake-build
        ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI pip install .
      fi


    displayName: 'Run ONNX Tests'
